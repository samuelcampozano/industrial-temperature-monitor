name: Frontend CI/CD

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-ci.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'frontend/**'

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install dependencies
      run: |
        cd frontend
        npm ci

    - name: Lint
      run: |
        cd frontend
        npm run lint

    - name: Build
      run: |
        cd frontend
        npm run build
      env:
        NEXT_PUBLIC_API_URL: http://localhost:5000
        NEXT_PUBLIC_SIGNALR_URL: http://localhost:5000/hubs

    - name: Run tests
      run: |
        cd frontend
        npm test -- --ci --coverage

    - name: Upload coverage
      uses: codecov/codecov-action@v3
      with:
        files: frontend/coverage/lcov.info
        flags: frontend

  docker-build:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      run: |
        cd frontend
        docker build -t temperature-control-frontend:latest .

    - name: Save Docker image
      run: docker save temperature-control-frontend:latest | gzip > frontend-image.tar.gz

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: frontend-docker-image
        path: frontend-image.tar.gz
        retention-days: 7
